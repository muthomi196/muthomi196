#include <Arduino.h>

//Including header files for servo and HX711 libraries
#include <Servo.h>
#include "HX711.h"

Servo ESC;// create servo object to control the ESC
int potVal;//Value from the potentiometer used in speed control
int period;//Value from the potentiometer mapped to give a range of 1000 to 2000 which are limits of ESC
const int ESCpin=9;//Signal pin for ESC

//Initializing variables for speed measurements using optocoupler
float value=0;
float rev=0;
int rpm;
int oldtime=0;
int time;
const byte interruptPin=2;

//Initializing variables for thrust measurements using a load cell 
HX711 scale;
#define LOADCELL_SDA_PIN A4
#define LOADCELL_SCL_PIN A5
float calibration_factor=-9900;
//Interrupt service routine
void isr()
{
  rev++;
}

void setup() {
  // put your setup code here, to run once:
  pinMode(interruptPin,INPUT_PULLUP);

  ESC.attach(ESCpin,1000,2000);//(pin,min pulse width,max pulse width)
  attachInterrupt(digitalPinToInterrupt(interruptPin),isr,RISING);//attaching interrupt
  scale.begin(LOADCELL_SDA_PIN,LOADCELL_SCL_PIN);
  scale.set_scale();
  scale.tare();//reset the scale to zero
  Serial.begin(9600);
}

void loop() {
  // put your main code here, to run repeatedly:
  //ESC speed control
  potVal=analogRead(A0);
  potVal=map(potVal,0,1023,0,180);
  period=map(potVal,0,180,1000,2000);
  ESC.write(potVal);

  //Speed measurement
  delay(1000);
  detachInterrupt(digitalPinToInterrupt(interruptPin));
  time=millis()-oldtime;//finds the time
  rpm=(rev/time)*60000/2;
  oldtime=millis();
  rev=0;
  attachInterrupt(digitalPinToInterrupt(interruptPin),isr,RISING);

  //Thrust measurement
  scale.set_scale(calibration_factor);
  //float weight=scale.get_units();//scale.get_units(),3

  //Serial monitor displays
  Serial.print("Rpm= ");
  Serial.print(rpm);
  Serial.print("  Period= ");
  Serial.print(period);
  Serial.print("  Weight= ");
  Serial.print(scale.get_units(),3);
  Serial.println("");

}